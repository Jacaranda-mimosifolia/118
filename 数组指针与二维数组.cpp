#include<stdio.h>
int main()
{
	//一维数组，数组的首元素与数组第一个元素的首地址 
	int a[3]={1,2,3};
	int (*p1)[3]=&a;
	for(int i=0;i<3;i++)
	{
		printf("a[%d]=%d\n",i,*(a+i));//数组的第一个元素的首地址
	}
	for(int i=0;i<3;i++)
	{
		printf("a[%d]=%d\n",i,*(*p1+i));//整个数组首地址
	}

	//二维数组，数组指针的妙用 
	int array[2][3]={{1,2,3},{4,5,6}};
	//二维数组的数组名array的类型就是int (*p2)[N]，类型相同，所以可以直接赋值。
	int (*p2)[3]=array;//[n]:二维数组的列数，亦或者是每个一维数组的元素个数。
	for(int i=0;i<2;i++)
	{
		for(int j=0;j<3;j++)
		{
			printf("array[%d][%d]=%d\n",i,j,*(*(array+i)+j));//数组的第一个元素的首地址
		}
	}
	for(int i=0;i<2;i++)
	{
		for(int j=0;j<3;j++)
		{
			printf("arrar[%d][%d]=%d\n",i,j,*(*(p2+i))+j);//整个数组首地址
		}
	}
	return 0;

//*(*(p2+i)+j); 其中i，j分别是两次取值的偏移量
//*(p2+i), 先选取数组(p2+i);i=0时,i=2时... 
//*(p2+i)+j, (p2+i)上的第j个下表偏移量;
//*(*(p2+i)+j), 最后用*访问数值; 
//我们说对数组指针对二维数组才有意义，其意义主要体现在里层的p+i上，
//可以通过移动p，访问连续的不同的一维数组。
